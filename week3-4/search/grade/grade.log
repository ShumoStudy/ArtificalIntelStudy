Reading autograder files......
    ./autograder.py
    ./testParser.py
    ./searchTestClasses.py
    ./test_cases/CONFIG
    ./test_cases/q1/CONFIG
    ./test_cases/q1/graph_backtrack.solution
    ./test_cases/q1/graph_backtrack.test
    ./test_cases/q1/graph_bfs_vs_dfs.solution
    ./test_cases/q1/graph_bfs_vs_dfs.test
    ./test_cases/q1/graph_infinite.solution
    ./test_cases/q1/graph_infinite.test
    ./test_cases/q1/graph_manypaths.solution
    ./test_cases/q1/graph_manypaths.test
    ./test_cases/q1/pacman_1.solution
    ./test_cases/q1/pacman_1.test
    ./test_cases/q2/CONFIG
    ./test_cases/q2/graph_backtrack.solution
    ./test_cases/q2/graph_backtrack.test
    ./test_cases/q2/graph_bfs_vs_dfs.solution
    ./test_cases/q2/graph_bfs_vs_dfs.test
    ./test_cases/q2/graph_infinite.solution
    ./test_cases/q2/graph_infinite.test
    ./test_cases/q2/graph_manypaths.solution
    ./test_cases/q2/graph_manypaths.test
    ./test_cases/q2/pacman_1.solution
    ./test_cases/q2/pacman_1.test
    ./test_cases/q3/CONFIG
    ./test_cases/q3/graph_backtrack.solution
    ./test_cases/q3/graph_backtrack.test
    ./test_cases/q3/graph_bfs_vs_dfs.solution
    ./test_cases/q3/graph_bfs_vs_dfs.test
    ./test_cases/q3/graph_infinite.solution
    ./test_cases/q3/graph_infinite.test
    ./test_cases/q3/graph_manypaths.solution
    ./test_cases/q3/graph_manypaths.test
    ./test_cases/q3/ucs_0_graph.solution
    ./test_cases/q3/ucs_0_graph.test
    ./test_cases/q3/ucs_1_problemC.solution
    ./test_cases/q3/ucs_1_problemC.test
    ./test_cases/q3/ucs_2_problemE.solution
    ./test_cases/q3/ucs_2_problemE.test
    ./test_cases/q3/ucs_3_problemW.solution
    ./test_cases/q3/ucs_3_problemW.test
    ./test_cases/q3/ucs_4_testSearch.solution
    ./test_cases/q3/ucs_4_testSearch.test
    ./test_cases/q3/ucs_5_goalAtDequeue.solution
    ./test_cases/q3/ucs_5_goalAtDequeue.test
    ./test_cases/q4/astar_0.solution
    ./test_cases/q4/astar_0.test
    ./test_cases/q4/astar_1_graph_heuristic.solution
    ./test_cases/q4/astar_1_graph_heuristic.test
    ./test_cases/q4/astar_2_manhattan.solution
    ./test_cases/q4/astar_2_manhattan.test
    ./test_cases/q4/astar_3_goalAtDequeue.solution
    ./test_cases/q4/astar_3_goalAtDequeue.test
    ./test_cases/q4/CONFIG
    ./test_cases/q4/graph_backtrack.solution
    ./test_cases/q4/graph_backtrack.test
    ./test_cases/q4/graph_manypaths.solution
    ./test_cases/q4/graph_manypaths.test
    ./test_cases/q5/CONFIG
    ./test_cases/q5/corner_tiny_corner.solution
    ./test_cases/q5/corner_tiny_corner.test
    ./test_cases/q6/CONFIG
    ./test_cases/q6/corner_sanity_1.solution
    ./test_cases/q6/corner_sanity_1.test
    ./test_cases/q6/corner_sanity_2.solution
    ./test_cases/q6/corner_sanity_2.test
    ./test_cases/q6/corner_sanity_3.solution
    ./test_cases/q6/corner_sanity_3.test
    ./test_cases/q6/medium_corners.solution
    ./test_cases/q6/medium_corners.test
    ./test_cases/q7/CONFIG
    ./test_cases/q7/food_heuristic_1.solution
    ./test_cases/q7/food_heuristic_1.test
    ./test_cases/q7/food_heuristic_10.solution
    ./test_cases/q7/food_heuristic_10.test
    ./test_cases/q7/food_heuristic_11.solution
    ./test_cases/q7/food_heuristic_11.test
    ./test_cases/q7/food_heuristic_12.solution
    ./test_cases/q7/food_heuristic_12.test
    ./test_cases/q7/food_heuristic_13.solution
    ./test_cases/q7/food_heuristic_13.test
    ./test_cases/q7/food_heuristic_14.solution
    ./test_cases/q7/food_heuristic_14.test
    ./test_cases/q7/food_heuristic_15.solution
    ./test_cases/q7/food_heuristic_15.test
    ./test_cases/q7/food_heuristic_16.solution
    ./test_cases/q7/food_heuristic_16.test
    ./test_cases/q7/food_heuristic_17.solution
    ./test_cases/q7/food_heuristic_17.test
    ./test_cases/q7/food_heuristic_2.solution
    ./test_cases/q7/food_heuristic_2.test
    ./test_cases/q7/food_heuristic_3.solution
    ./test_cases/q7/food_heuristic_3.test
    ./test_cases/q7/food_heuristic_4.solution
    ./test_cases/q7/food_heuristic_4.test
    ./test_cases/q7/food_heuristic_5.solution
    ./test_cases/q7/food_heuristic_5.test
    ./test_cases/q7/food_heuristic_6.solution
    ./test_cases/q7/food_heuristic_6.test
    ./test_cases/q7/food_heuristic_7.solution
    ./test_cases/q7/food_heuristic_7.test
    ./test_cases/q7/food_heuristic_8.solution
    ./test_cases/q7/food_heuristic_8.test
    ./test_cases/q7/food_heuristic_9.solution
    ./test_cases/q7/food_heuristic_9.test
    ./test_cases/q7/food_heuristic_grade_tricky.solution
    ./test_cases/q7/food_heuristic_grade_tricky.test
    ./test_cases/q8/closest_dot_1.solution
    ./test_cases/q8/closest_dot_1.test
    ./test_cases/q8/closest_dot_10.solution
    ./test_cases/q8/closest_dot_10.test
    ./test_cases/q8/closest_dot_11.solution
    ./test_cases/q8/closest_dot_11.test
    ./test_cases/q8/closest_dot_12.solution
    ./test_cases/q8/closest_dot_12.test
    ./test_cases/q8/closest_dot_13.solution
    ./test_cases/q8/closest_dot_13.test
    ./test_cases/q8/closest_dot_2.solution
    ./test_cases/q8/closest_dot_2.test
    ./test_cases/q8/closest_dot_3.solution
    ./test_cases/q8/closest_dot_3.test
    ./test_cases/q8/closest_dot_4.solution
    ./test_cases/q8/closest_dot_4.test
    ./test_cases/q8/closest_dot_5.solution
    ./test_cases/q8/closest_dot_5.test
    ./test_cases/q8/closest_dot_6.solution
    ./test_cases/q8/closest_dot_6.test
    ./test_cases/q8/closest_dot_7.solution
    ./test_cases/q8/closest_dot_7.test
    ./test_cases/q8/closest_dot_8.solution
    ./test_cases/q8/closest_dot_8.test
    ./test_cases/q8/closest_dot_9.solution
    ./test_cases/q8/closest_dot_9.test
    ./test_cases/q8/CONFIG

Found no modifications. You're good.
Running autogarder......

Done grading, logging output......

------------------------------------------------------------
Starting on 3-19 at 11:49:46

Question q1
===========
*** PASS: test_cases/q1/graph_backtrack.test
*** 	solution:		['1:A->C', '0:C->G']
*** 	expanded_states:	['A', 'D', 'C']
*** PASS: test_cases/q1/graph_bfs_vs_dfs.test
*** 	solution:		['2:A->D', '0:D->G']
*** 	expanded_states:	['A', 'D']
*** PASS: test_cases/q1/graph_infinite.test
*** 	solution:		['0:A->B', '1:B->C', '1:C->G']
*** 	expanded_states:	['A', 'B', 'C']
*** PASS: test_cases/q1/graph_manypaths.test
*** 	solution:		['2:A->B2', '0:B2->C', '0:C->D', '2:D->E2', '0:E2->F', '0:F->G']
*** 	expanded_states:	['A', 'B2', 'C', 'D', 'E2', 'F']
*** PASS: test_cases/q1/pacman_1.test
*** 	pacman layout:		mediumMaze
*** 	solution length: 130
*** 	nodes expanded:		146

### Question q1: 3/3 ###


Question q2
===========
*** PASS: test_cases/q2/graph_backtrack.test
*** 	solution:		['1:A->C', '0:C->G']
*** 	expanded_states:	['A', 'B', 'C', 'D']
*** PASS: test_cases/q2/graph_bfs_vs_dfs.test
*** 	solution:		['1:A->G']
*** 	expanded_states:	['A', 'B']
*** PASS: test_cases/q2/graph_infinite.test
*** 	solution:		['0:A->B', '1:B->C', '1:C->G']
*** 	expanded_states:	['A', 'B', 'C']
*** PASS: test_cases/q2/graph_manypaths.test
*** 	solution:		['1:A->C', '0:C->D', '1:D->F', '0:F->G']
*** 	expanded_states:	['A', 'B1', 'C', 'B2', 'D', 'E1', 'F', 'E2']
*** PASS: test_cases/q2/pacman_1.test
*** 	pacman layout:		mediumMaze
*** 	solution length: 68
*** 	nodes expanded:		269

### Question q2: 3/3 ###


Question q3
===========
*** PASS: test_cases/q3/graph_backtrack.test
*** 	solution:		['1:A->C', '0:C->G']
*** 	expanded_states:	['A', 'B', 'C', 'D']
*** FAIL: test_cases/q3/graph_bfs_vs_dfs.test
*** 	graph:
*** 	    /-- B
*** 	    |   ^
*** 	    |   |
*** 	    |  *A -->[G]
*** 	    |   |     ^
*** 	    |   V     |
*** 	    \-->D ----/
*** 	    
*** 	    A is the start state, G is the goal.  Arrows
*** 	    mark possible transitions
*** 	student solution:		['0:A->B', '0:B->D', '0:D->G']
*** 	student expanded_states:	['A', 'B', 'D', 'D']
*** 
*** 	correct solution:		['1:A->G']
*** 	correct expanded_states:	['A', 'B']
*** 	correct rev_solution:		['1:A->G']
*** 	correct rev_expanded_states:	['A', 'B']
*** PASS: test_cases/q3/graph_infinite.test
*** 	solution:		['0:A->B', '1:B->C', '1:C->G']
*** 	expanded_states:	['A', 'B', 'C']
*** FAIL: test_cases/q3/graph_manypaths.test
*** 	graph:
*** 	        B1          E1
*** 	       ^  \        ^  \
*** 	      /    V      /    V
*** 	    *A --> C --> D --> F --> [G]
*** 	      \    ^      \    ^
*** 	       V  /        V  /
*** 	        B2          E2
*** 	    
*** 	    A is the start state, G is the goal.  Arrows mark 
*** 	    possible state transitions.  This graph has multiple
*** 	    paths to the goal, where nodes with the same state 
*** 	    are added to the fringe multiple times before they
*** 	    are expanded.
*** 	student solution:		['0:A->B1', '0:B1->C', '0:C->D', '0:D->E1', '0:E1->F', '0:F->G']
*** 	student expanded_states:	['A', 'B1', 'B2', 'C', 'C', 'C', 'D', 'D', 'D', 'E1', 'E1', 'E1', 'E2', 'E2', 'E2', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F']
*** 
*** 	correct solution:		['1:A->C', '0:C->D', '1:D->F', '0:F->G']
*** 	correct expanded_states:	['A', 'B1', 'C', 'B2', 'D', 'E1', 'F', 'E2']
*** 	correct rev_solution:		['1:A->C', '0:C->D', '1:D->F', '0:F->G']
*** 	correct rev_expanded_states:	['A', 'B1', 'C', 'B2', 'D', 'E1', 'F', 'E2']
*** FAIL: test_cases/q3/ucs_0_graph.test
*** 	graph:
*** 	              C
*** 	              ^
*** 	              | 2
*** 	         2    V   4 
*** 	    *A <----> B -----> [H]
*** 	              |1 
*** 	         1.5  V  2.5
*** 	     G <----- D -----> E
*** 	              |
*** 	            2 | 
*** 	              V
*** 	             [F]
*** 	    
*** 	    A is the start state, F and H is the goal.  Arrows mark possible state 
*** 	    transitions.  The number next to the arrow is the cost of that transition.
*** 	student solution:		['Right', 'Down', 'Down']
*** 	student expanded_states:	['A', 'B', 'C', 'D', 'E']
*** 
*** 	correct solution:		['Right', 'Down', 'Down']
*** 	correct expanded_states:	['A', 'B', 'D', 'C', 'G']
*** 	correct rev_solution:		['Right', 'Down', 'Down']
*** 	correct rev_expanded_states:	['A', 'B', 'D', 'C', 'G']
*** FAIL: test_cases/q3/ucs_1_problemC.test
*** Solution not correct.
*** 	student solution length: 152
*** 	student solution:
West West West West West West West West West West West West West West
West West West West West West West West West West West West West West
West West West West West South South South South South South South
South South East East East North North North North North North North
East East South South South South South South East East North North
North North North North East East South South South South East East
North North East East South South East East East South South West West
West West West West South South West West West West West South West
West West West West South South East East East East East East East
North East East East East East North North East East East East East
East South South West West West West South South West West West West
West South West West West West West West West West West
*** 
*** 	correct solution length: 68
*** 	correct (reversed) solution length: 68
*** 	correct solution:
West West West West West West West West West South South East East
South South South West West West North West West West West South South
South East East East East East East East South South South South South
South South West West West West West West West West West West West
West West West West West West South West West West West West West West
West West
*** 	correct (reversed) solution:
West West West West West West West West West South South East East
South South South West West West North West West West West South South
South East East East East East East East South South South South South
South South West West West West West West West West West West West
West West West West West West South West West West West West West West
West West
*** FAIL: test_cases/q3/ucs_2_problemE.test
*** Solution not correct.
*** 	student solution length: 152
*** 	student solution:
West West West West West West West West West West West West West West
West West West West West West West West West West West West West West
West West West West West South South South South South South South
South South East East East North North North North North North North
East East South South South South South South East East North North
North North North North East East South South South South East East
North North East East South South East East East South South West West
West West West West South South West West West West West South West
West West West West South South East East East East East East East
North East East East East East North North East East East East East
East South South West West West West South South West West West West
West South West West West West West West West West West
*** 
*** 	correct solution length: 74
*** 	correct (reversed) solution length: 74
*** 	correct solution:
South South West West West West South South East East East East South
South West West West West South South East East East East South South
West West West West South South East East East East South South South
West West West West West West West North West West West West West West
West West West West West West West West West West West South West West
West West West West West West West
*** 	correct (reversed) solution:
South South West West West West South South East East East East South
South West West West West South South East East East East South South
West West West West South South East East East East South South South
West West West West West West West North West West West West West West
West West West West West West West West West West West South West West
West West West West West West West
*** PASS: test_cases/q3/ucs_3_problemW.test
*** 	pacman layout:		mediumMaze
*** 	solution length: 152
*** 	nodes expanded:		166
*** FAIL: Exception raised: '<' not supported between instances of 'Grid' and 'Grid'
*** 
*** Traceback (most recent call last):
***   File "/home/shumo/PycharmProjects/ArtificalIntelStudy/week3-4/search/grading.py", line 76, in grade
***     util.TimeoutFunction(getattr(gradingModule, q),1800)(self) # Call the question's function
***   File "/home/shumo/PycharmProjects/ArtificalIntelStudy/week3-4/search/util.py", line 631, in __call__
***     result = self.function(*args, **keyArgs)
***   File "autograder.py", line 300, in <lambda>
***     return lambda grades: question.execute(grades)
***   File "/home/shumo/PycharmProjects/ArtificalIntelStudy/week3-4/search/testClasses.py", line 57, in execute
***     if not f(grades):
***   File "autograder.py", line 295, in <lambda>
***     return lambda grades: testCase.execute(grades, moduleDict, solutionDict)
***   File "searchTestClasses.py", line 307, in execute
***     solution, expanded, error = self.getSolInfo(search, searchAgents)
***   File "searchTestClasses.py", line 288, in getSolInfo
***     solution = alg(problem)
***   File "search.py", line 168, in uniformCostSearch
***     frontier.put((child, child_path, child_path_cost), child_path_cost)
***   File "/home/shumo/anaconda3/envs/pythonProject/lib/python3.6/queue.py", line 143, in put
***     self._put(item)
***   File "/home/shumo/anaconda3/envs/pythonProject/lib/python3.6/queue.py", line 227, in _put
***     heappush(self.queue, item)
*** TypeError: '<' not supported between instances of 'Grid' and 'Grid'
*** 

### Question q3: 0/3 ###


Question q4
===========
*** PASS: test_cases/q4/astar_0.test
*** 	solution:		['Right', 'Down', 'Down']
*** 	expanded_states:	['A', 'B', 'D', 'C', 'G']
*** PASS: test_cases/q4/astar_1_graph_heuristic.test
*** 	solution:		['0', '0', '2']
*** 	expanded_states:	['S', 'A', 'D', 'C']
*** PASS: test_cases/q4/astar_2_manhattan.test
*** 	pacman layout:		mediumMaze
*** 	solution length: 68
*** 	nodes expanded:		221
*** PASS: test_cases/q4/astar_3_goalAtDequeue.test
*** 	solution:		['1:A->B', '0:B->C', '0:C->G']
*** 	expanded_states:	['A', 'B', 'C']
*** PASS: test_cases/q4/graph_backtrack.test
*** 	solution:		['1:A->C', '0:C->G']
*** 	expanded_states:	['A', 'B', 'C', 'D']
*** PASS: test_cases/q4/graph_manypaths.test
*** 	solution:		['1:A->C', '0:C->D', '1:D->F', '0:F->G']
*** 	expanded_states:	['A', 'B1', 'C', 'B2', 'D', 'E1', 'F', 'E2']

### Question q4: 3/3 ###


Question q5
===========
*** FAIL: Exception raised: unhashable type: 'list'
*** 
*** Traceback (most recent call last):
***   File "/home/shumo/PycharmProjects/ArtificalIntelStudy/week3-4/search/grading.py", line 76, in grade
***     util.TimeoutFunction(getattr(gradingModule, q),1800)(self) # Call the question's function
***   File "/home/shumo/PycharmProjects/ArtificalIntelStudy/week3-4/search/util.py", line 631, in __call__
***     result = self.function(*args, **keyArgs)
***   File "autograder.py", line 300, in <lambda>
***     return lambda grades: question.execute(grades)
***   File "/home/shumo/PycharmProjects/ArtificalIntelStudy/week3-4/search/testClasses.py", line 57, in execute
***     if not f(grades):
***   File "autograder.py", line 295, in <lambda>
***     return lambda grades: testCase.execute(grades, moduleDict, solutionDict)
***   File "searchTestClasses.py", line 409, in execute
***     solution, missedCorners = self.solution(search, searchAgents)
***   File "searchTestClasses.py", line 395, in solution
***     path = search.bfs(problem)
***   File "search.py", line 130, in breadthFirstSearch
***     if state not in visited:
*** TypeError: unhashable type: 'list'
*** 

### Question q5: 0/3 ###


Question q6
===========
*** FAIL: Exception raised: can only concatenate tuple (not "float") to tuple
*** 
*** Traceback (most recent call last):
***   File "/home/shumo/PycharmProjects/ArtificalIntelStudy/week3-4/search/grading.py", line 76, in grade
***     util.TimeoutFunction(getattr(gradingModule, q),1800)(self) # Call the question's function
***   File "/home/shumo/PycharmProjects/ArtificalIntelStudy/week3-4/search/util.py", line 631, in __call__
***     result = self.function(*args, **keyArgs)
***   File "autograder.py", line 300, in <lambda>
***     return lambda grades: question.execute(grades)
***   File "/home/shumo/PycharmProjects/ArtificalIntelStudy/week3-4/search/testClasses.py", line 115, in execute
***     results.append(f(grades))
***   File "autograder.py", line 295, in <lambda>
***     return lambda grades: testCase.execute(grades, moduleDict, solutionDict)
***   File "searchTestClasses.py", line 702, in execute
***     succs = problem.getSuccessors(start_state)
***   File "searchAgents.py", line 337, in getSuccessors
***     nextx, nexty = int(x + dx), int(y + dy)
*** TypeError: can only concatenate tuple (not "float") to tuple
*** 

### Question q6: 0/3 ###


Question q7
===========
*** PASS: test_cases/q7/food_heuristic_1.test
*** PASS: test_cases/q7/food_heuristic_10.test
*** FAIL: test_cases/q7/food_heuristic_11.test
*** Heuristic failed admissibility test
*** Tests failed.

### Question q7: 0/4 ###


Question q8
===========
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
*** PASS: test_cases/q8/closest_dot_1.test
*** 	pacman layout:		Test 1
*** 	solution length:		1
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
*** PASS: test_cases/q8/closest_dot_10.test
*** 	pacman layout:		Test 10
*** 	solution length:		1
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
*** PASS: test_cases/q8/closest_dot_11.test
*** 	pacman layout:		Test 11
*** 	solution length:		2
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
*** PASS: test_cases/q8/closest_dot_12.test
*** 	pacman layout:		Test 12
*** 	solution length:		3
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
*** PASS: test_cases/q8/closest_dot_13.test
*** 	pacman layout:		Test 13
*** 	solution length:		1
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
*** PASS: test_cases/q8/closest_dot_2.test
*** 	pacman layout:		Test 2
*** 	solution length:		1
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
*** PASS: test_cases/q8/closest_dot_3.test
*** 	pacman layout:		Test 3
*** 	solution length:		1
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
*** PASS: test_cases/q8/closest_dot_4.test
*** 	pacman layout:		Test 4
*** 	solution length:		3
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
*** PASS: test_cases/q8/closest_dot_5.test
*** 	pacman layout:		Test 5
*** 	solution length:		1
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
*** PASS: test_cases/q8/closest_dot_6.test
*** 	pacman layout:		Test 6
*** 	solution length:		2
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
*** PASS: test_cases/q8/closest_dot_7.test
*** 	pacman layout:		Test 7
*** 	solution length:		1
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
*** PASS: test_cases/q8/closest_dot_8.test
*** 	pacman layout:		Test 8
*** 	solution length:		1
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
*** PASS: test_cases/q8/closest_dot_9.test
*** 	pacman layout:		Test 9
*** 	solution length:		1

### Question q8: 3/3 ###


Finished at 11:49:46

Provisional grades
==================
Question q1: 3/3
Question q2: 3/3
Question q3: 0/3
Question q4: 3/3
Question q5: 0/3
Question q6: 0/3
Question q7: 0/4
Question q8: 3/3
------------------
Total: 12/25

Your grades are NOT yet registered.  To register your grades, make sure
to follow your instructor's guidelines to receive credit on your project.

------------------------------------------------------------

Here is your grade:
------------------------------------------------------------
Question q1:.............................. 3/3
Question q2:.............................. 3/3
Question q3:.............................. 0/3
Question q4:.............................. 3/3
Question q5:.............................. 0/3
Question q6:.............................. 0/3
Question q7:.............................. 0/4
Question q8:.............................. 3/3
------------------------------------------------------------
Your final score:......................... 12/25

Finish writing token file: grade/search.token

Your grade is not yet registered. Please submit the log and token files under 
grade directory together with all modified files to record the grade.
